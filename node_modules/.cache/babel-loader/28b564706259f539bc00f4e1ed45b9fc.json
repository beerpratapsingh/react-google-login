{"ast":null,"code":"var _jsxFileName = \"/Users/beerpratapsingh/practice-file/react-google-login/src/Auth/Auth.js\";\nimport React, { useState, useEffect } from 'react'; //IMPORT COMPONENTS\n\nimport GoogleLogin from 'react-google-login'; // import { GoogleLogout } from 'react-google-login';\n\nimport { useHistory } from \"react-router-dom\";\nimport { CLIENT_ID, setIsLogedIn, getIsLogedIn, setUserInfo } from '../utils/Auth.Service';\n\nconst Auth = () => {\n  // const CLIENT_ID = '242339457886-5rkssbi0n3qj8imu0do19krh7edh11b5.apps.googleusercontent.com';\n  const [isLogedin, setisLogedin] = useState(undefined);\n  const [accessToken, setAccessToken] = useState('');\n  let history = useHistory();\n  useEffect(() => {\n    setisLogedin(getIsLogedIn());\n    console.log('isLogedin', isLogedin);\n  }, []);\n  useEffect(() => {\n    console.log('isLogedin', isLogedin);\n\n    if (isLogedin === true) {\n      history.push('/home');\n    } else {\n      console.log('Not Loged In');\n    }\n  }, [isLogedin]);\n\n  const handelLogin = res => {\n    console.log('B', res);\n\n    if (res.accessToken) {\n      setisLogedin(true);\n      setAccessToken(res.accessToken);\n      setIsLogedIn(true);\n      setUserInfo(res);\n      history.push(\"/home\");\n    }\n\n    console.log('Check Var on login', isLogedin);\n    console.log('Check Var on login', accessToken);\n  }; // const handelLogout = (res) => {\n  //   setisLogedin(false);\n  //   setAccessToken('');\n  //   console.log('Check Var on logout', isLogedin);\n  //   console.log('Check Var on logout', accessToken);\n  // }\n\n\n  const handleLoginFailure = res => {\n    alert('Failed to log in');\n  }; // const handleLogoutFailure = (res) => {\n  //   alert('Failed to log out');\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Welcome to Ninja\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"New insurance journal and audit system\"), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: CLIENT_ID,\n    buttonText: \"Sign in with Google\",\n    onSuccess: handelLogin,\n    onFailure: handleLoginFailure,\n    cookiePolicy: \"single_host_origin\",\n    responseType: \"code,token\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/beerpratapsingh/practice-file/react-google-login/src/Auth/Auth.js"],"names":["React","useState","useEffect","GoogleLogin","useHistory","CLIENT_ID","setIsLogedIn","getIsLogedIn","setUserInfo","Auth","isLogedin","setisLogedin","undefined","accessToken","setAccessToken","history","console","log","push","handelLogin","res","handleLoginFailure","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,YAAlC,EAAgDC,WAAhD,QAAmE,uBAAnE;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACjB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACW,SAAD,CAA1C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAEA,MAAIc,OAAO,GAAGX,UAAU,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACJ,YAAY,EAAb,CAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,SAAzB;AACD,GAHQ,EAGP,EAHO,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,SAAzB;;AACA,QAAGA,SAAS,KAAK,IAAjB,EAAsB;AACpBK,MAAAA,OAAO,CAACG,IAAR,CAAa,OAAb;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;AACF,GAPQ,EAOP,CAACP,SAAD,CAPO,CAAT;;AAUA,QAAMS,WAAW,GAAIC,GAAD,IAAS;AAC3BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBG,GAAjB;;AACA,QAAGA,GAAG,CAACP,WAAP,EAAmB;AACjBF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,MAAAA,cAAc,CAACM,GAAG,CAACP,WAAL,CAAd;AACAP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,WAAW,CAACY,GAAD,CAAX;AACAL,MAAAA,OAAO,CAACG,IAAR,CAAa,OAAb;AACD;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,SAAlC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,WAAlC;AACD,GAXD,CAtBiB,CAqCjB;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMQ,kBAAkB,GAAID,GAAD,IAAS;AAClCE,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,GAFD,CA5CiB,CAgDjB;AACA;AACA;;;AAEA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFF,eAIE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEjB,SADZ;AAEE,IAAA,UAAU,EAAC,qBAFb;AAGE,IAAA,SAAS,EAAEc,WAHb;AAIE,IAAA,SAAS,EAAEE,kBAJb;AAKE,IAAA,YAAY,EAAE,oBALhB;AAME,IAAA,YAAY,EAAC,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAiDD,CArGD;;AAuGA,eAAeZ,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\n//IMPORT COMPONENTS\nimport GoogleLogin from 'react-google-login';\n// import { GoogleLogout } from 'react-google-login';\nimport { useHistory } from \"react-router-dom\";\n\nimport { CLIENT_ID, setIsLogedIn, getIsLogedIn, setUserInfo } from '../utils/Auth.Service';\n\n\nconst Auth = () => {\n  // const CLIENT_ID = '242339457886-5rkssbi0n3qj8imu0do19krh7edh11b5.apps.googleusercontent.com';\n  const [isLogedin, setisLogedin] = useState(undefined);\n  const [accessToken, setAccessToken] = useState('');\n\n  let history = useHistory();  \n\n  useEffect(() => {\n    setisLogedin(getIsLogedIn());    \n    console.log('isLogedin', isLogedin);\n  },[]);\n\n  useEffect(() => {    \n    console.log('isLogedin', isLogedin);\n    if(isLogedin === true){\n      history.push('/home');\n    } else {\n      console.log('Not Loged In');\n    }\n  },[isLogedin]);\n  \n\n  const handelLogin = (res) => {\n    console.log('B', res);\n    if(res.accessToken){\n      setisLogedin(true);\n      setAccessToken(res.accessToken);\n      setIsLogedIn(true);\n      setUserInfo(res);\n      history.push(\"/home\");      \n    }\n    console.log('Check Var on login', isLogedin);\n    console.log('Check Var on login', accessToken);    \n  }\n\n  \n\n  // const handelLogout = (res) => {\n  //   setisLogedin(false);\n  //   setAccessToken('');\n  //   console.log('Check Var on logout', isLogedin);\n  //   console.log('Check Var on logout', accessToken);\n  // }\n\n  const handleLoginFailure = (res) => {\n    alert('Failed to log in');\n  }\n\n  // const handleLogoutFailure = (res) => {\n  //   alert('Failed to log out');\n  // }\n  \n  return (\n    <>\n      <h3>Welcome to Ninja</h3>\n      <p>New insurance journal and audit system</p>\n\n      <GoogleLogin\n        clientId={CLIENT_ID}\n        buttonText=\"Sign in with Google\"\n        onSuccess={handelLogin}\n        onFailure={handleLoginFailure}\n        cookiePolicy={\"single_host_origin\"}\n        responseType=\"code,token\"\n      />\n\n      {/* { isLogedin ?\n        <GoogleLogout\n          clientId={ CLIENT_ID }\n          buttonText='Logout'\n          onLogoutSuccess={ handelLogout }\n          onFailure={ handleLogoutFailure }\n        />\n        : \n        <GoogleLogin\n          clientId={ CLIENT_ID }\n          buttonText='Sign in with Google'\n          onSuccess={ handelLogin }\n          onFailure={ handleLoginFailure }\n          cookiePolicy={ 'single_host_origin' }\n          responseType='code,token'\n        />\n      } */}\n\n      {/* <GoogleLogin\n        clientId=\"242339457886-5rkssbi0n3qj8imu0do19krh7edh11b5.apps.googleusercontent.com\"\n        buttonText=\"Sign in with Google\"\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      /> */}\n\n      {/* <GoogleLogout\n        clientId=\"242339457886-5rkssbi0n3qj8imu0do19krh7edh11b5.apps.googleusercontent.com\"\n        buttonText=\"Logout\"\n        onLogoutSuccess={logout}\n        onFailure={responseGoogle}\n      >\n      </GoogleLogout> */}\n    </>\n  );\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}